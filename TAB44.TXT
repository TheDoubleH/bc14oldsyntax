OBJECT Table 44 Sales Comment Line
{
  OBJECT-PROPERTIES
  {
    Date=03/26/20;
    Time=12:00:00 PM;
    Version List=NAVW114.12,NAVNA14.12;
  }
  PROPERTIES
  {
    CaptionML=ENU=Sales Comment Line;
    LookupPageID=Page69;
    DrillDownPageID=Page69;
  }
  FIELDS
  {
    { 1   ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Shipment,Posted Invoice,Posted Credit Memo,Posted Return Receipt;
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Shipment,Posted Invoice,Posted Credit Memo,Posted Return Receipt }
    { 2   ;   ;No.                 ;Code20        ;CaptionML=ENU=No. }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 4   ;   ;Date                ;Date          ;CaptionML=ENU=Date }
    { 5   ;   ;Code                ;Code10        ;CaptionML=ENU=Code }
    { 6   ;   ;Comment             ;Text80        ;CaptionML=ENU=Comment }
    { 7   ;   ;Document Line No.   ;Integer       ;CaptionML=ENU=Document Line No. }
    { 10000;  ;Print On Quote      ;Boolean       ;CaptionML=ENU=Print On Quote }
    { 10001;  ;Print On Pick Ticket;Boolean       ;CaptionML=ENU=Print On Pick Ticket }
    { 10002;  ;Print On Order Confirmation;Boolean;CaptionML=ENU=Print On Order Confirmation }
    { 10003;  ;Print On Shipment   ;Boolean       ;CaptionML=ENU=Print On Shipment }
    { 10004;  ;Print On Invoice    ;Boolean       ;CaptionML=ENU=Print On Invoice }
    { 10005;  ;Print On Credit Memo;Boolean       ;CaptionML=ENU=Print On Credit Memo }
    { 10006;  ;Print On Return Authorization;Boolean;
                                                   CaptionML=ENU=Print On Return Authorization }
    { 10007;  ;Print On Return Receipt;Boolean    ;CaptionML=ENU=Print On Return Receipt }
  }
  KEYS
  {
    {    ;Document Type,No.,Document Line No.,Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE SetUpNewLine@1();
    VAR
      SalesCommentLine@1000 : Record 44;
    BEGIN
      SalesCommentLine.SETRANGE("Document Type","Document Type");
      SalesCommentLine.SETRANGE("No.","No.");
      SalesCommentLine.SETRANGE("Document Line No.","Document Line No.");
      SalesCommentLine.SETRANGE(Date,WORKDATE);
      IF NOT SalesCommentLine.FINDFIRST THEN
        Date := WORKDATE;

      OnAfterSetUpNewLine(Rec,SalesCommentLine);
    END;

    [External]
    PROCEDURE CopyComments@22(FromDocumentType@1000 : Integer;ToDocumentType@1001 : Integer;FromNumber@1002 : Code[20];ToNumber@1003 : Code[20]);
    VAR
      SalesCommentLine@1004 : Record 44;
      SalesCommentLine2@1005 : Record 44;
      IsHandled@1006 : Boolean;
    BEGIN
      IsHandled := FALSE;
      OnBeforeCopyComments(SalesCommentLine,ToDocumentType,IsHandled,FromDocumentType,FromNumber,ToNumber);
      IF IsHandled THEN
        EXIT;

      SalesCommentLine.SETRANGE("Document Type",FromDocumentType);
      SalesCommentLine.SETRANGE("No.",FromNumber);
      IF SalesCommentLine.FINDSET THEN
        REPEAT
          SalesCommentLine2 := SalesCommentLine;
          SalesCommentLine2."Document Type" := ToDocumentType;
          SalesCommentLine2."No." := ToNumber;
          SalesCommentLine2.INSERT;
        UNTIL SalesCommentLine.NEXT = 0;
    END;

    [External]
    PROCEDURE CopyLineComments@6(FromDocumentType@1000 : Integer;ToDocumentType@1001 : Integer;FromNumber@1002 : Code[20];ToNumber@1003 : Code[20];FromDocumentLineNo@1008 : Integer;ToDocumentLineNo@1007 : Integer);
    VAR
      SalesCommentLineSource@1004 : Record 44;
      SalesCommentLineTarget@1005 : Record 44;
      IsHandled@1006 : Boolean;
    BEGIN
      IsHandled := FALSE;
      OnBeforeCopyLineComments(
        SalesCommentLineTarget,IsHandled,FromDocumentType,ToDocumentType,FromNumber,ToNumber,FromDocumentLineNo,ToDocumentLineNo);
      IF IsHandled THEN
        EXIT;

      SalesCommentLineSource.SETRANGE("Document Type",FromDocumentType);
      SalesCommentLineSource.SETRANGE("No.",FromNumber);
      SalesCommentLineSource.SETRANGE("Document Line No.",FromDocumentLineNo);
      IF SalesCommentLineSource.FINDSET THEN
        REPEAT
          SalesCommentLineTarget := SalesCommentLineSource;
          SalesCommentLineTarget."Document Type" := ToDocumentType;
          SalesCommentLineTarget."No." := ToNumber;
          SalesCommentLineTarget."Document Line No." := ToDocumentLineNo;
          SalesCommentLineTarget.INSERT;
        UNTIL SalesCommentLineSource.NEXT = 0;
    END;

    [External]
    PROCEDURE CopyLineCommentsFromSalesLines@10(FromDocumentType@1000 : Integer;ToDocumentType@1001 : Integer;FromNumber@1002 : Code[20];ToNumber@1003 : Code[20];VAR TempSalesLineSource@1008 : TEMPORARY Record 37);
    VAR
      SalesCommentLineSource@1004 : Record 44;
      SalesCommentLineTarget@1005 : Record 44;
      IsHandled@1006 : Boolean;
      NextLineNo@1007 : Integer;
    BEGIN
      IsHandled := FALSE;
      OnBeforeCopyLineCommentsFromSalesLines(
        SalesCommentLineTarget,IsHandled,FromDocumentType,ToDocumentType,FromNumber,ToNumber,TempSalesLineSource);
      IF IsHandled THEN
        EXIT;

      SalesCommentLineTarget.SETRANGE("Document Type",ToDocumentType);
      SalesCommentLineTarget.SETRANGE("No.",ToNumber);
      SalesCommentLineTarget.SETRANGE("Document Line No.",0);
      IF SalesCommentLineTarget.FINDLAST THEN;
      NextLineNo := SalesCommentLineTarget."Line No." + 10000;
      SalesCommentLineTarget.RESET;

      SalesCommentLineSource.SETRANGE("Document Type",FromDocumentType);
      SalesCommentLineSource.SETRANGE("No.",FromNumber);
      IF TempSalesLineSource.FINDSET THEN
        REPEAT
          SalesCommentLineSource.SETRANGE("Document Line No.",TempSalesLineSource."Line No.");
          IF SalesCommentLineSource.FINDSET THEN
            REPEAT
              SalesCommentLineTarget := SalesCommentLineSource;
              SalesCommentLineTarget."Document Type" := ToDocumentType;
              SalesCommentLineTarget."No." := ToNumber;
              SalesCommentLineTarget."Document Line No." := 0;
              SalesCommentLineTarget."Line No." := NextLineNo;
              SalesCommentLineTarget.INSERT;
              NextLineNo += 10000;
            UNTIL SalesCommentLineSource.NEXT = 0;
        UNTIL TempSalesLineSource.NEXT = 0;
    END;

    [External]
    PROCEDURE CopyHeaderComments@8(FromDocumentType@1000 : Integer;ToDocumentType@1001 : Integer;FromNumber@1002 : Code[20];ToNumber@1003 : Code[20]);
    VAR
      SalesCommentLineSource@1004 : Record 44;
      SalesCommentLineTarget@1005 : Record 44;
      IsHandled@1006 : Boolean;
    BEGIN
      IsHandled := FALSE;
      OnBeforeCopyHeaderComments(SalesCommentLineTarget,IsHandled,FromDocumentType,ToDocumentType,FromNumber,ToNumber);
      IF IsHandled THEN
        EXIT;

      SalesCommentLineSource.SETRANGE("Document Type",FromDocumentType);
      SalesCommentLineSource.SETRANGE("No.",FromNumber);
      SalesCommentLineSource.SETRANGE("Document Line No.",0);
      IF SalesCommentLineSource.FINDSET THEN
        REPEAT
          SalesCommentLineTarget := SalesCommentLineSource;
          SalesCommentLineTarget."Document Type" := ToDocumentType;
          SalesCommentLineTarget."No." := ToNumber;
          SalesCommentLineTarget.INSERT;
        UNTIL SalesCommentLineSource.NEXT = 0;
    END;

    [External]
    PROCEDURE DeleteComments@2(DocType@1000 : Option;DocNo@1001 : Code[20]);
    BEGIN
      SETRANGE("Document Type",DocType);
      SETRANGE("No.",DocNo);
      IF NOT ISEMPTY THEN
        DELETEALL;
    END;

    [External]
    PROCEDURE ShowComments@3(DocType@1001 : Option;DocNo@1002 : Code[20];DocLineNo@1003 : Integer);
    VAR
      SalesCommentSheet@1000 : Page 67;
    BEGIN
      SETRANGE("Document Type",DocType);
      SETRANGE("No.",DocNo);
      SETRANGE("Document Line No.",DocLineNo);
      CLEAR(SalesCommentSheet);
      SalesCommentSheet.SETTABLEVIEW(Rec);
      SalesCommentSheet.RUNMODAL;
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterSetUpNewLine@5(VAR SalesCommentLineRec@1000 : Record 44;VAR SalesCommentLineFilter@1001 : Record 44);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeCopyComments@4(VAR SalesCommentLine@1000 : Record 44;ToDocumentType@1001 : Integer;VAR IsHandled@1002 : Boolean;FromDocumentType@1005 : Integer;FromNumber@1004 : Code[20];ToNumber@1003 : Code[20]);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeCopyLineComments@7(VAR SalesCommentLine@1000 : Record 44;VAR IsHandled@1002 : Boolean;FromDocumentType@1005 : Integer;ToDocumentType@1001 : Integer;FromNumber@1004 : Code[20];ToNumber@1003 : Code[20];FromDocumentLineNo@1007 : Integer;ToDocumentLine@1006 : Integer);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeCopyLineCommentsFromSalesLines@11(VAR SalesCommentLine@1000 : Record 44;VAR IsHandled@1002 : Boolean;FromDocumentType@1006 : Integer;ToDocumentType@1005 : Integer;FromNumber@1004 : Code[20];ToNumber@1003 : Code[20];VAR TempSalesLineSource@1001 : TEMPORARY Record 37);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeCopyHeaderComments@9(VAR SalesCommentLine@1000 : Record 44;VAR IsHandled@1002 : Boolean;FromDocumentType@1005 : Integer;ToDocumentType@1001 : Integer;FromNumber@1004 : Code[20];ToNumber@1003 : Code[20]);
    BEGIN
    END;

    BEGIN
    END.
  }
}

