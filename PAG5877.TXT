OBJECT Page 5877 Physical Inventory Order Subf.
{
  OBJECT-PROPERTIES
  {
    Date=03/24/19;
    Time=12:00:00 PM;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    SourceTable=Table5876;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnOpenPage=BEGIN
                 SetDimensionsVisibility;
               END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                     END;

    OnNewRecord=BEGIN
                  CLEAR(ShortcutDimCode);
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1905168304;2 ;Action    ;
                      CaptionML=ENU=Recording Lines;
                      ToolTipML=ENU=View one or more physical inventory recording lines where the selected item exists;
                      ApplicationArea=#Warehouse;
                      OnAction=BEGIN
                                 ShowPhysInvtRecordingLines;
                               END;
                                }
      { 1900774204;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as a project or department, that are assigned to the physical inventory order line for financial analysis.;
                      ApplicationArea=#Warehouse;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1901226904;2 ;ActionGroup;
                      CaptionML=ENU=Item &Tracking Lines;
                      Image=AllLines }
      { 1900832804;3 ;Action    ;
                      CaptionML=ENU=E&xpected Tracking Lines;
                      ToolTipML=ENU=View the serial or lot numbers that are currently recorded (expected) for the item on the line.;
                      ApplicationArea=#Warehouse;
                      OnAction=BEGIN
                                 ShowExpectPhysInvtTrackLines;
                               END;
                                }
      { 1905621004;3 ;Action    ;
                      CaptionML=ENU=&All Diff. Tracking Lines;
                      ToolTipML=ENU=View the serial or lot numbers that are different on the related recording than currently recorded (expected) for the item on the line.;
                      ApplicationArea=#Warehouse;
                      OnAction=BEGIN
                                 ShowItemTrackingLines(0);
                               END;
                                }
      { 1903416104;3 ;Action    ;
                      CaptionML=ENU=&Pos. Diff. Tracking Lines;
                      ToolTipML=ENU=View the serial or lot numbers that are counted as more on the related recording than currently recorded (expected) for the item on the line.;
                      ApplicationArea=#Warehouse;
                      OnAction=BEGIN
                                 ShowItemTrackingLines(1);
                               END;
                                }
      { 1907751604;3 ;Action    ;
                      CaptionML=ENU=&Neg. Diff. Tracking Lines;
                      ToolTipML=ENU=View the serial or lot numbers that are counted as less on the related recording than currently recorded (expected) for the item on the line.;
                      ApplicationArea=#Warehouse;
                      OnAction=BEGIN
                                 ShowItemTrackingLines(2);
                               END;
                                }
      { 1904376404;2 ;ActionGroup;
                      CaptionML=ENU=E&ntries;
                      Image=Entries }
      { 1904829104;3 ;Action    ;
                      CaptionML=ENU=Ledger E&ntries;
                      ToolTipML=ENU=View the item's item ledger entries.;
                      ApplicationArea=#Warehouse;
                      OnAction=BEGIN
                                 ShowItemLedgerEntries;
                               END;
                                }
      { 1900435004;3 ;Action    ;
                      CaptionML=ENU=&Phys. Inventory Ledger Entries;
                      ToolTipML=ENU=View the item's physical inventory ledger entries, meaning the history of the item's ledger entry changes from counting.;
                      ApplicationArea=#Warehouse;
                      Image=PhysicalInventoryLedger;
                      OnAction=BEGIN
                                 ShowPhysInvtLedgerEntries;
                               END;
                                }
      { 1900887704;2 ;Action    ;
                      CaptionML=ENU=Bin Content (&Item);
                      ToolTipML=ENU=View the item's content in bins.;
                      ApplicationArea=#Warehouse;
                      OnAction=BEGIN
                                 ShowBinContentItem;
                               END;
                                }
      { 1900493604;2 ;Action    ;
                      CaptionML=ENU=Bin Content (&Bin);
                      ToolTipML=ENU=View the content of the bins where the item exists.;
                      ApplicationArea=#Warehouse;
                      OnAction=BEGIN
                                 ShowBinContentBin;
                               END;
                                }
      { 54      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 56      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Calculate Expected &Qty.;
                      ToolTipML=ENU=Update the value in the Qty. Expected (Base) field on the line with any inventory changes made since you created the order. When you have used this function, the Qty. Exp. Calculated check box is selected.;
                      ApplicationArea=#Warehouse;
                      Image=Line;
                      OnAction=BEGIN
                                 CalculateQtyExpected;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 40  ;1   ;Group     ;
                GroupType=Repeater }

    { 1   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the item, which should be counted when taking the physical inventory.;
                ApplicationArea=#Warehouse;
                SourceExpr="Item No." }

    { 3   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 5   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the description of the item.;
                ApplicationArea=#Warehouse;
                SourceExpr=Description }

    { 7   ;2   ;Field     ;
                ToolTipML=ENU=Specifies an additional description of the item.;
                ApplicationArea=#Warehouse;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 9   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the location where the item must be counted.;
                ApplicationArea=#Warehouse;
                SourceExpr="Location Code" }

    { 11  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the bin where the item must be counted.;
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Code";
                Visible=FALSE }

    { 13  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the unit of measure, such as bottle or piece, that is currently used for the item.;
                ApplicationArea=#Warehouse;
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 15  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the base unit of measure that is set up for the item.;
                ApplicationArea=#Warehouse;
                SourceExpr="Base Unit of Measure Code" }

    { 17  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the shelf number where the item can be found normally.;
                ApplicationArea=#Warehouse;
                SourceExpr="Shelf No.";
                Visible=FALSE }

    { 19  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the expected inventory quantity in the base unit of measure.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Expected (Base)" }

    { 21  ;2   ;Field     ;
                ToolTipML=ENU=Specifies if the Qty. Expected (Base) field has been updated with the Calculate Expected Qty. function.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Exp. Calculated" }

    { 23  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the item's expected inventory of serial and lot numbers in the base unit of measure.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Exp. Item Tracking (Base)" }

    { 25  ;2   ;Field     ;
                ToolTipML=ENU=Specifies that the counting of the item is done by counting its serial and lot numbers.;
                ApplicationArea=#Warehouse;
                SourceExpr="Use Item Tracking" }

    { 27  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the counted quantity in the base unit of measure on the physical inventory order line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Recorded (Base)" }

    { 29  ;2   ;Field     ;
                ToolTipML=ENU=Specifies if the item exists on one or more physical inventory recording lines.;
                ApplicationArea=#Warehouse;
                SourceExpr="On Recording Lines" }

    { 31  ;2   ;Field     ;
                ToolTipML=ENU=Specifies how many of the related physical inventory recordings are closed.;
                ApplicationArea=#Warehouse;
                BlankZero=Yes;
                SourceExpr="No. Finished Rec.-Lines" }

    { 33  ;2   ;Field     ;
                ToolTipML=ENU=Specifies that no physical inventory order lines existed for the recorded item, and that the line was generated based on the related recording.;
                ApplicationArea=#Warehouse;
                SourceExpr="Recorded Without Order";
                Visible=FALSE }

    { 35  ;2   ;Field     ;
                ToolTipML=ENU=Specifies if the difference in the Quantity (Base) field on the related closed recording is positive or negative.;
                ApplicationArea=#Warehouse;
                SourceExpr="Entry Type";
                Visible=FALSE }

    { 37  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the difference between the Qty. Expected (Base) and the Qty. Recorded (Base) fields.;
                ApplicationArea=#Warehouse;
                SourceExpr="Quantity (Base)";
                Visible=FALSE }

    { 39  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the positive difference between the Qty. Expected (Base) and the Qty. Recorded (Base) fields.;
                ApplicationArea=#Warehouse;
                BlankZero=Yes;
                SourceExpr="Pos. Qty. (Base)" }

    { 41  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the negative difference between the Qty. Expected (Base) and the Qty. Recorded (Base) fields.;
                ApplicationArea=#Warehouse;
                BlankZero=Yes;
                SourceExpr="Neg. Qty. (Base)" }

    { 43  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the unit price of the item.;
                ApplicationArea=#Warehouse;
                SourceExpr="Unit Amount";
                Visible=FALSE }

    { 45  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the unit costs of the item, which will be used when posting the physical inventory.;
                ApplicationArea=#Warehouse;
                SourceExpr="Unit Cost";
                Visible=FALSE }

    { 47  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=DimVisible1 }

    { 49  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=DimVisible2 }

    { 51  ;2   ;Field     ;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(3),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=DimVisible3;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 53  ;2   ;Field     ;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(4),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=DimVisible4;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 55  ;2   ;Field     ;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(5),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=DimVisible5;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 57  ;2   ;Field     ;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(6),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=DimVisible6;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 59  ;2   ;Field     ;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(7),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=DimVisible7;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 61  ;2   ;Field     ;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(8),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=DimVisible8;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

  }
  CODE
  {
    VAR
      ShortcutDimCode@1000 : ARRAY [8] OF Code[20];
      DimVisible1@1001 : Boolean;
      DimVisible2@1002 : Boolean;
      DimVisible3@1003 : Boolean;
      DimVisible4@1004 : Boolean;
      DimVisible5@1005 : Boolean;
      DimVisible6@1006 : Boolean;
      DimVisible7@1007 : Boolean;
      DimVisible8@1008 : Boolean;

    [External]
    PROCEDURE ShowDimensions@1();
    BEGIN
      ShowDimensions;
    END;

    [External]
    PROCEDURE ShowPhysInvtRecordingLines@2();
    BEGIN
      ShowPhysInvtRecordingLines;
    END;

    [External]
    PROCEDURE CalculateQtyExpected@3();
    VAR
      PhysInvtCalcQtyOne@1000 : Codeunit 5888;
    BEGIN
      PhysInvtCalcQtyOne.RUN(Rec);
      CLEAR(PhysInvtCalcQtyOne);
    END;

    [External]
    PROCEDURE ShowExpectPhysInvtTrackLines@4();
    BEGIN
      ShowExpectPhysInvtTrackLines;
    END;

    [External]
    PROCEDURE ShowItemTrackingLines@5(Which@1000 : Integer);
    BEGIN
      ShowItemTrackingLines(Which);
    END;

    [External]
    PROCEDURE ShowItemLedgerEntries@6();
    BEGIN
      ShowItemLedgerEntries;
    END;

    [External]
    PROCEDURE ShowPhysInvtLedgerEntries@7();
    BEGIN
      ShowPhysInvtLedgerEntries;
    END;

    [External]
    PROCEDURE ShowBinContentItem@8();
    BEGIN
      ShowBinContentItem;
    END;

    [External]
    PROCEDURE ShowBinContentBin@9();
    BEGIN
      ShowBinContentBin;
    END;

    LOCAL PROCEDURE SetDimensionsVisibility@14();
    VAR
      DimMgt@1000 : Codeunit 408;
    BEGIN
      DimVisible1 := FALSE;
      DimVisible2 := FALSE;
      DimVisible3 := FALSE;
      DimVisible4 := FALSE;
      DimVisible5 := FALSE;
      DimVisible6 := FALSE;
      DimVisible7 := FALSE;
      DimVisible8 := FALSE;

      DimMgt.UseShortcutDims(
        DimVisible1,DimVisible2,DimVisible3,DimVisible4,DimVisible5,DimVisible6,DimVisible7,DimVisible8);

      CLEAR(DimMgt);
    END;

    BEGIN
    END.
  }
}

