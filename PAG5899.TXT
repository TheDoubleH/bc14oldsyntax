OBJECT Page 5899 Phys. Invt. Tracking Lines
{
  OBJECT-PROPERTIES
  {
    Date=03/24/19;
    Time=12:00:00 PM;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Phys. Invt. Tracking Lines;
    SourceTable=Table5885;
    PageType=List;
    OnClosePage=BEGIN
                  TempPhysInvtTracking := Rec;
                END;

    OnFindRecord=BEGIN
                   TempPhysInvtTracking.SETVIEW(GETVIEW);
                   TempPhysInvtTracking := Rec;
                   IF NOT TempPhysInvtTracking.FIND(Which) THEN
                     EXIT(FALSE);
                   Rec := TempPhysInvtTracking;
                   EXIT(TRUE);
                 END;

    OnNextRecord=VAR
                   CurrentSteps@1000 : Integer;
                 BEGIN
                   TempPhysInvtTracking := Rec;
                   CurrentSteps := TempPhysInvtTracking.NEXT(Steps);
                   IF CurrentSteps <> 0 THEN
                     Rec := TempPhysInvtTracking;
                   EXIT(CurrentSteps);
                 END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 40  ;1   ;Group     ;
                GroupType=Repeater }

    { 1   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the serial number.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Serial No." }

    { 3   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the lot number.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Lot No" }

    { 5   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the expected base quantity.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Qty. Expected (Base)" }

  }
  CODE
  {
    VAR
      TempPhysInvtTracking@1000 : TEMPORARY Record 5885;

    [External]
    PROCEDURE SetSources@1(VAR PhysInvtTracking@1000 : Record 5885);
    BEGIN
      TempPhysInvtTracking.RESET;
      TempPhysInvtTracking.DELETEALL;
      IF PhysInvtTracking.FIND('-') THEN
        REPEAT
          TempPhysInvtTracking := PhysInvtTracking;
          TempPhysInvtTracking.INSERT;
        UNTIL PhysInvtTracking.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

