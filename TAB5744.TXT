OBJECT Table 5744 Transfer Shipment Header
{
  OBJECT-PROPERTIES
  {
    Date=02/25/22;
    Time=12:00:00 PM;
    Version List=NAVW114.34,NAVNA14.34;
  }
  PROPERTIES
  {
    DataCaptionFields=No.;
    OnDelete=VAR
               InvtCommentLine@1000 : Record 5748;
               TransShptLine@1001 : Record 5745;
               MoveEntries@1002 : Codeunit 361;
             BEGIN
               TransShptLine.SETRANGE("Document No.","No.");
               IF TransShptLine.FIND('-') THEN
                 REPEAT
                   TransShptLine.DELETE;
                 UNTIL TransShptLine.NEXT = 0;

               InvtCommentLine.SETRANGE("Document Type",InvtCommentLine."Document Type"::"Posted Transfer Shipment");
               InvtCommentLine.SETRANGE("No.","No.");
               InvtCommentLine.DELETEALL;

               ItemTrackingMgt.DeleteItemEntryRelation(
                 DATABASE::"Transfer Shipment Line",0,"No.",'',0,0,TRUE);

               MoveEntries.MoveDocRelatedEntries(DATABASE::"Transfer Shipment Header","No.");
             END;

    CaptionML=ENU=Transfer Shipment Header;
    LookupPageID=Page5752;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=ENU=No. }
    { 2   ;   ;Transfer-from Code  ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=ENU=Transfer-from Code }
    { 3   ;   ;Transfer-from Name  ;Text100       ;CaptionML=ENU=Transfer-from Name }
    { 4   ;   ;Transfer-from Name 2;Text50        ;CaptionML=ENU=Transfer-from Name 2 }
    { 5   ;   ;Transfer-from Address;Text100      ;CaptionML=ENU=Transfer-from Address }
    { 6   ;   ;Transfer-from Address 2;Text50     ;CaptionML=ENU=Transfer-from Address 2 }
    { 7   ;   ;Transfer-from Post Code;Code20     ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Transfer-from ZIP Code }
    { 8   ;   ;Transfer-from City  ;Text30        ;TableRelation="Post Code".City;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Transfer-from City }
    { 9   ;   ;Transfer-from County;Text30        ;CaptionML=ENU=Transfer-from State;
                                                   CaptionClass='5,1,' + "Trsf.-from Country/Region Code" }
    { 10  ;   ;Trsf.-from Country/Region Code;Code10;
                                                   TableRelation=Country/Region;
                                                   CaptionML=ENU=Trsf.-from Country/Region Code }
    { 11  ;   ;Transfer-to Code    ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=ENU=Transfer-to Code }
    { 12  ;   ;Transfer-to Name    ;Text100       ;CaptionML=ENU=Transfer-to Name }
    { 13  ;   ;Transfer-to Name 2  ;Text50        ;CaptionML=ENU=Transfer-to Name 2 }
    { 14  ;   ;Transfer-to Address ;Text100       ;CaptionML=ENU=Transfer-to Address }
    { 15  ;   ;Transfer-to Address 2;Text50       ;CaptionML=ENU=Transfer-to Address 2 }
    { 16  ;   ;Transfer-to Post Code;Code20       ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Transfer-to ZIP Code }
    { 17  ;   ;Transfer-to City    ;Text30        ;TableRelation="Post Code".City;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Transfer-to City }
    { 18  ;   ;Transfer-to County  ;Text30        ;CaptionML=ENU=Transfer-to State;
                                                   CaptionClass='5,1,' + "Trsf.-to Country/Region Code" }
    { 19  ;   ;Trsf.-to Country/Region Code;Code10;TableRelation=Country/Region;
                                                   CaptionML=ENU=Trsf.-to Country/Region Code }
    { 20  ;   ;Transfer Order Date ;Date          ;CaptionML=ENU=Transfer Order Date }
    { 21  ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 22  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Inventory Comment Line" WHERE (Document Type=CONST(Posted Transfer Shipment),
                                                                                                     No.=FIELD(No.)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 23  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 24  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   CaptionClass='1,2,2' }
    { 25  ;   ;Transfer Order No.  ;Code20        ;TableRelation="Transfer Header";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Transfer Order No. }
    { 26  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series }
    { 27  ;   ;Shipment Date       ;Date          ;CaptionML=ENU=Shipment Date }
    { 28  ;   ;Receipt Date        ;Date          ;CaptionML=ENU=Receipt Date }
    { 29  ;   ;In-Transit Code     ;Code10        ;TableRelation=Location.Code WHERE (Use As In-Transit=CONST(Yes));
                                                   CaptionML=ENU=In-Transit Code }
    { 30  ;   ;Transfer-from Contact;Text100      ;CaptionML=ENU=Transfer-from Contact }
    { 31  ;   ;Transfer-to Contact ;Text100       ;CaptionML=ENU=Transfer-to Contact }
    { 32  ;   ;External Document No.;Code35       ;CaptionML=ENU=External Document No. }
    { 33  ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent";
                                                   AccessByPermission=TableData 5790=R;
                                                   CaptionML=ENU=Shipping Agent Code }
    { 34  ;   ;Shipping Agent Service Code;Code10 ;TableRelation="Shipping Agent Services".Code WHERE (Shipping Agent Code=FIELD(Shipping Agent Code));
                                                   CaptionML=ENU=Shipping Agent Service Code }
    { 35  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=ENU=Shipment Method Code }
    { 47  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=ENU=Transaction Type }
    { 48  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=ENU=Transport Method }
    { 49  ;   ;Partner VAT ID      ;Code20        ;CaptionML=ENU=Partner Tax ID }
    { 59  ;   ;Entry/Exit Point    ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=ENU=Entry/Exit Point }
    { 63  ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=ENU=Area }
    { 64  ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=ENU=Transaction Specification }
    { 70  ;   ;Direct Transfer     ;Boolean       ;CaptionML=ENU=Direct Transfer }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=No }
    { 10020;  ;Original Document XML;BLOB         ;CaptionML=ENU=Original Document XML }
    { 10022;  ;Original String     ;BLOB          ;CaptionML=ENU=Original String }
    { 10023;  ;Digital Stamp SAT   ;BLOB          ;CaptionML=ENU=Digital Stamp SAT }
    { 10024;  ;Certificate Serial No.;Text250     ;CaptionML=ENU=Certificate Serial No.;
                                                   Editable=No }
    { 10025;  ;Signed Document XML ;BLOB          ;CaptionML=ENU=Signed Document XML }
    { 10026;  ;Digital Stamp PAC   ;BLOB          ;CaptionML=ENU=Digital Stamp PAC }
    { 10030;  ;Electronic Document Status;Option  ;CaptionML=ENU=Electronic Document Status;
                                                   OptionCaptionML=ENU=" ,Stamp Received,Sent,Canceled,Stamp Request Error,Cancel Error";
                                                   OptionString=[ ,Stamp Received,Sent,Canceled,Stamp Request Error,Cancel Error];
                                                   Editable=No }
    { 10031;  ;Date/Time Stamped   ;Text50        ;CaptionML=ENU=Date/Time Stamped;
                                                   Editable=No }
    { 10033;  ;Date/Time Canceled  ;Text50        ;CaptionML=ENU=Date/Time Canceled;
                                                   Editable=No }
    { 10035;  ;Error Code          ;Code10        ;CaptionML=ENU=Error Code;
                                                   Editable=No }
    { 10036;  ;Error Description   ;Text250       ;CaptionML=ENU=Error Description;
                                                   Editable=No }
    { 10040;  ;PAC Web Service Name;Text50        ;CaptionML=ENU=PAC Web Service Name;
                                                   Editable=No }
    { 10041;  ;QR Code             ;BLOB          ;CaptionML=ENU=QR Code }
    { 10042;  ;Fiscal Invoice Number PAC;Text50   ;CaptionML=ENU=Fiscal Invoice Number PAC;
                                                   Editable=No }
    { 10043;  ;Date/Time First Req. Sent;Text50   ;CaptionML=ENU=Date/Time First Req. Sent;
                                                   Editable=No }
    { 10044;  ;Transport Operators ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("CFDI Transport Operator" WHERE (Document Table ID=CONST(5744),
                                                                                                      Document No.=FIELD(No.)));
                                                   CaptionML=ENU=Transport Operators }
    { 10045;  ;Transit-from Date/Time;DateTime    ;CaptionML=ENU=Transit-from Date/Time }
    { 10046;  ;Transit Hours       ;Integer       ;CaptionML=ENU=Transit Hours }
    { 10047;  ;Transit Distance    ;Decimal       ;CaptionML=ENU=Transit Distance }
    { 10048;  ;Insurer Name        ;Text50        ;CaptionML=ENU=Insurer Name }
    { 10049;  ;Insurer Policy Number;Text30       ;CaptionML=ENU=Insurer Policy Number }
    { 10050;  ;Foreign Trade       ;Boolean       ;CaptionML=ENU=Foreign Trade }
    { 10051;  ;Vehicle Code        ;Code20        ;TableRelation="Fixed Asset";
                                                   CaptionML=ENU=Vehicle Code }
    { 10052;  ;Trailer 1           ;Code20        ;TableRelation="Fixed Asset" WHERE (SAT Trailer Type=FILTER(<>''));
                                                   CaptionML=ENU=Trailer 1 }
    { 10053;  ;Trailer 2           ;Code20        ;TableRelation="Fixed Asset" WHERE (SAT Trailer Type=FILTER(<>''));
                                                   CaptionML=ENU=Trailer 2 }
    { 10056;  ;Medical Insurer Name;Text50        ;CaptionML=ENU=Medical Insurer Name }
    { 10057;  ;Medical Ins. Policy Number;Text30  ;CaptionML=ENU=Medical Ins. Policy Number }
    { 10058;  ;SAT Weight Unit Of Measure;Code10  ;TableRelation="SAT Weight Unit of Measure";
                                                   CaptionML=ENU=SAT Weight Unit Of Measure }
    { 27002;  ;CFDI Cancellation Reason Code;Code10;
                                                   TableRelation="CFDI Cancellation Reason";
                                                   CaptionML=ENU=CFDI Cancelation Reason Code }
    { 27003;  ;Substitution Document No.;Code20   ;TableRelation="Transfer Shipment Header" WHERE (Electronic Document Status=FILTER(Stamp Received));
                                                   CaptionML=ENU=Substitution Document No. }
    { 27004;  ;CFDI Export Code    ;Code10        ;TableRelation="CFDI Export Code";
                                                   CaptionML=ENU=CFDI Export Code }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Posting Date                             }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Transfer-from Code,Transfer-to Code,Posting Date,Transfer Order Date }
  }
  CODE
  {
    VAR
      DimMgt@1000 : Codeunit 408;
      ItemTrackingMgt@1001 : Codeunit 6500;
      NoElectronicStampErr@1310000 : TextConst '@@@=%1 - Document No.;ENU=There is no electronic stamp for document no. %1.';

    [External]
    PROCEDURE Navigate@2();
    VAR
      NavigateForm@1000 : Page 344;
    BEGIN
      NavigateForm.SetDoc("Posting Date","No.");
      NavigateForm.RUN;
    END;

    [External]
    PROCEDURE PrintRecords@3(ShowRequestForm@1000 : Boolean);
    VAR
      ReportSelection@1001 : Record 77;
      TransShptHeader@1002 : Record 5744;
    BEGIN
      WITH TransShptHeader DO BEGIN
        COPY(Rec);
        ReportSelection.PrintWithGUIYesNo(ReportSelection.Usage::Inv2,TransShptHeader,ShowRequestForm,0);
      END;
    END;

    [External]
    PROCEDURE ShowDimensions@1();
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"No."));
    END;

    [External]
    PROCEDURE CopyFromTransferHeader@4(TransHeader@1000 : Record 5740);
    BEGIN
      "Transfer-from Code" := TransHeader."Transfer-from Code";
      "Transfer-from Name" := TransHeader."Transfer-from Name";
      "Transfer-from Name 2" := TransHeader."Transfer-from Name 2";
      "Transfer-from Address" := TransHeader."Transfer-from Address";
      "Transfer-from Address 2" := TransHeader."Transfer-from Address 2";
      "Transfer-from Post Code" := TransHeader."Transfer-from Post Code";
      "Transfer-from City" := TransHeader."Transfer-from City";
      "Transfer-from County" := TransHeader."Transfer-from County";
      "Trsf.-from Country/Region Code" := TransHeader."Trsf.-from Country/Region Code";
      "Transfer-from Contact" := TransHeader."Transfer-from Contact";
      "Transfer-to Code" := TransHeader."Transfer-to Code";
      "Transfer-to Name" := TransHeader."Transfer-to Name";
      "Transfer-to Name 2" := TransHeader."Transfer-to Name 2";
      "Transfer-to Address" := TransHeader."Transfer-to Address";
      "Transfer-to Address 2" := TransHeader."Transfer-to Address 2";
      "Transfer-to Post Code" := TransHeader."Transfer-to Post Code";
      "Transfer-to City" := TransHeader."Transfer-to City";
      "Transfer-to County" := TransHeader."Transfer-to County";
      "Trsf.-to Country/Region Code" := TransHeader."Trsf.-to Country/Region Code";
      "Transfer-to Contact" := TransHeader."Transfer-to Contact";
      "Transfer Order Date" := TransHeader."Posting Date";
      "Posting Date" := TransHeader."Posting Date";
      "Shipment Date" := TransHeader."Shipment Date";
      "Receipt Date" := TransHeader."Receipt Date";
      "Shortcut Dimension 1 Code" := TransHeader."Shortcut Dimension 1 Code";
      "Shortcut Dimension 2 Code" := TransHeader."Shortcut Dimension 2 Code";
      "Dimension Set ID" := TransHeader."Dimension Set ID";
      "Transfer Order No." := TransHeader."No.";
      "External Document No." := TransHeader."External Document No.";
      "In-Transit Code" := TransHeader."In-Transit Code";
      "Shipping Agent Code" := TransHeader."Shipping Agent Code";
      "Shipping Agent Service Code" := TransHeader."Shipping Agent Service Code";
      "Shipment Method Code" := TransHeader."Shipment Method Code";
      "Transaction Type" := TransHeader."Transaction Type";
      "Transport Method" := TransHeader."Transport Method";
      "Partner VAT ID" := TransHeader."Partner VAT ID";
      "Entry/Exit Point" := TransHeader."Entry/Exit Point";
      Area := TransHeader.Area;
      "Transaction Specification" := TransHeader."Transaction Specification";
      "Direct Transfer" := TransHeader."Direct Transfer";

      "Transit-from Date/Time" := TransHeader."Transit-from Date/Time";
      "Transit Hours" := TransHeader."Transit Hours";
      "Transit Distance" := TransHeader."Transit Distance";
      "Insurer Name" := TransHeader."Insurer Name";
      "Insurer Policy Number" := TransHeader."Insurer Policy Number";
      "Foreign Trade" := TransHeader."Foreign Trade";
      "Vehicle Code" := TransHeader."Vehicle Code";
      "Trailer 1" := TransHeader."Trailer 1";
      "Trailer 2" := TransHeader."Trailer 2";
      "Medical Insurer Name" := TransHeader."Medical Insurer Name";
      "Medical Ins. Policy Number" := TransHeader."Medical Ins. Policy Number";
      "SAT Weight Unit Of Measure" := TransHeader."SAT Weight Unit Of Measure";
      "CFDI Export Code" := "CFDI Export Code";

      OnAfterCopyFromTransferHeader(Rec,TransHeader);
    END;

    [External]
    PROCEDURE ExportEDocument@1020000();
    VAR
      TempBlob@1020000 : Record 99008535;
      FileManagement@1020001 : Codeunit 419;
    BEGIN
      CALCFIELDS("Signed Document XML");
      IF "Signed Document XML".HASVALUE THEN BEGIN
        TempBlob.Blob := "Signed Document XML";
        FileManagement.BLOBExport(TempBlob,"No." + '.xml',TRUE);
      END ELSE
        ERROR(NoElectronicStampErr,"No.");
    END;

    [External]
    PROCEDURE RequestStampEDocument@1020001();
    VAR
      EInvoiceMgt@1020001 : Codeunit 10145;
      LoCRecRef@1020000 : RecordRef;
    BEGIN
      LoCRecRef.GETTABLE(Rec);
      EInvoiceMgt.RequestStampDocument(LoCRecRef,FALSE);
    END;

    [External]
    PROCEDURE CancelEDocument@1020002();
    VAR
      EInvoiceMgt@1020001 : Codeunit 10145;
      LoCRecRef@1020000 : RecordRef;
    BEGIN
      LoCRecRef.GETTABLE(Rec);
      EInvoiceMgt.CancelDocument(LoCRecRef);
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCopyFromTransferHeader@5(VAR TransferShipmentHeader@1000 : Record 5744;TransferHeader@1001 : Record 5740);
    BEGIN
    END;

    BEGIN
    END.
  }
}

