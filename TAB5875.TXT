OBJECT Table 5875 Phys. Invt. Order Header
{
  OBJECT-PROPERTIES
  {
    Date=05/22/19;
    Time=12:00:00 PM;
    Version List=NAVW114.01;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Description;
    OnInsert=VAR
               PstdPhysInvtOrderHdr@1000 : Record 5879;
             BEGIN
               InvtSetup.GET;

               IF "No." = '' THEN BEGIN
                 TestNoSeries;
                 NoSeriesMgt.InitSeries(GetNoSeriesCode,xRec."No. Series","Order Date","No.","No. Series");
               END;

               IF PstdPhysInvtOrderHdr.GET("No.") THEN
                 ERROR(AlreadyExistsErr,"No.");

               InitRecord;
             END;

    OnModify=BEGIN
               TESTFIELD(Status,Status::Open);
             END;

    OnDelete=VAR
               PhysInvtRecordHeader@1000 : Record 5877;
               PhysInvtCommentLine@1001 : Record 5883;
             BEGIN
               TESTFIELD(Status,Status::Open);

               TESTFIELD("No. Finished Recordings",0);

               PhysInvtOrderLine.RESET;
               PhysInvtOrderLine.SETRANGE("Document No.","No.");
               PhysInvtOrderLine.DELETEALL(TRUE);

               PhysInvtCommentLine.RESET;
               PhysInvtCommentLine.SETRANGE("Document Type",PhysInvtCommentLine."Document Type"::Order);
               PhysInvtCommentLine.SETRANGE("Order No.","No.");
               PhysInvtCommentLine.SETRANGE("Recording No.",0);
               PhysInvtCommentLine.DELETEALL;

               PhysInvtRecordHeader.RESET;
               PhysInvtRecordHeader.SETRANGE("Order No.","No.");
               PhysInvtRecordHeader.DELETEALL(TRUE);
             END;

    OnRename=BEGIN
               ERROR(CannotRenameErr,TABLECAPTION);
             END;

    CaptionML=ENU=Phys. Invt. Order Header;
    LookupPageID=Page5876;
    DrillDownPageID=Page5876;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  InvtSetup.GET;
                                                                  NoSeriesMgt.TestManual(GetNoSeriesCode);
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 10  ;   ;Description         ;Text100       ;CaptionML=ENU=Description }
    { 11  ;   ;Status              ;Option        ;CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=Open,Finished;
                                                   OptionString=Open,Finished;
                                                   Editable=No }
    { 20  ;   ;Order Date          ;Date          ;CaptionML=ENU=Order Date }
    { 21  ;   ;Posting Date        ;Date          ;OnValidate=BEGIN
                                                                IF "Posting Date" <> xRec."Posting Date" THEN BEGIN
                                                                  PhysInvtOrderLine.RESET;
                                                                  PhysInvtOrderLine.SETRANGE("Document No.","No.");
                                                                  PhysInvtOrderLine.SETFILTER("Item No.",'<>%1','');
                                                                  IF PhysInvtOrderLine.FIND('-') THEN BEGIN
                                                                    TESTFIELD("Posting Date");
                                                                    IF NOT CONFIRM(
                                                                         STRSUBSTNO(
                                                                           ConfirmChangeQst,
                                                                           PhysInvtOrderLine.FIELDCAPTION("Qty. Expected (Base)"),
                                                                           FIELDCAPTION("Posting Date") ),
                                                                         FALSE)
                                                                    THEN BEGIN
                                                                      "Posting Date" := xRec."Posting Date";
                                                                      EXIT;
                                                                    END;
                                                                    PhysInvtOrderLine.LOCKTABLE;
                                                                    PhysInvtOrderLine.RESET;
                                                                    PhysInvtOrderLine.SETRANGE("Document No.","No.");
                                                                    IF PhysInvtOrderLine.FIND('-') THEN
                                                                      REPEAT
                                                                        IF PhysInvtOrderLine."Item No." <> '' THEN BEGIN
                                                                          PhysInvtOrderLine.ResetQtyExpected;
                                                                          PhysInvtOrderLine.MODIFY;
                                                                        END;
                                                                      UNTIL PhysInvtOrderLine.NEXT = 0;
                                                                    MODIFY;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Posting Date }
    { 30  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Phys. Invt. Comment Line" WHERE (Document Type=CONST(Order),
                                                                                                       Order No.=FIELD(No.),
                                                                                                       Recording No.=CONST(0)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 31  ;   ;Person Responsible  ;Code20        ;TableRelation=Employee;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Person Responsible }
    { 40  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=ENU=Reason Code }
    { 41  ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=ENU=Gen. Bus. Posting Group }
    { 50  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 51  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   CaptionClass='1,2,2' }
    { 60  ;   ;Posting No. Series  ;Code20        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "Posting No. Series" <> '' THEN BEGIN
                                                                  InvtSetup.GET;
                                                                  TestNoSeries;
                                                                  NoSeriesMgt.TestSeries(GetPostingNoSeriesCode,"Posting No. Series");
                                                                END;
                                                                TESTFIELD("Posting No.",'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              WITH PhysInvtOrderHeader DO BEGIN
                                                                PhysInvtOrderHeader := Rec;
                                                                InvtSetup.GET;
                                                                TestNoSeries;
                                                                IF NoSeriesMgt.LookupSeries(GetPostingNoSeriesCode,"Posting No. Series") THEN
                                                                  VALIDATE("Posting No. Series");
                                                                Rec := PhysInvtOrderHeader;
                                                              END;
                                                            END;

                                                   CaptionML=ENU=Posting No. Series }
    { 61  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 64  ;   ;Posting No.         ;Code20        ;CaptionML=ENU=Posting No. }
    { 65  ;   ;Last Posting No.    ;Code20        ;TableRelation="Sales Invoice Header";
                                                   CaptionML=ENU=Last Posting No.;
                                                   Editable=No }
    { 71  ;   ;No. Finished Recordings;Integer    ;FieldClass=FlowField;
                                                   CalcFormula=Count("Phys. Invt. Record Header" WHERE (Order No.=FIELD(No.),
                                                                                                        Status=CONST(Finished)));
                                                   CaptionML=ENU=No. Finished Recordings;
                                                   Editable=No }
    { 110 ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=ENU=Location Code }
    { 111 ;   ;Bin Code            ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Location Code));
                                                   OnValidate=BEGIN
                                                                IF "Bin Code" <> '' THEN BEGIN
                                                                  TESTFIELD("Location Code");
                                                                  Location.GET("Location Code");
                                                                  Location.TESTFIELD("Bin Mandatory",TRUE);
                                                                  Location.TESTFIELD("Directed Put-away and Pick",FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Bin Code }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnValidate=BEGIN
                                                                DimManagement.UpdateGlobalDimFromDimSetID("Dimension Set ID","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ShowDocDim;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Status                                   }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Description                          }
  }
  CODE
  {
    VAR
      AlreadyExistsErr@1000 : TextConst '@@@="%1 = Order No.";ENU=Posted Invt. Count Order %1 already exists.';
      CannotRenameErr@1001 : TextConst '@@@="%1 = table caption";ENU=You cannot rename a %1.';
      ConfirmChangeQst@1002 : TextConst '@@@="%1 = field caption, %2 = Posting Date";ENU=%1 will be reset in all order lines. Do you want to change %2?';
      InvtSetup@1003 : Record 313;
      PhysInvtOrderHeader@1004 : Record 5875;
      PhysInvtOrderLine@1005 : Record 5876;
      Location@1010 : Record 14;
      NoSeriesMgt@1011 : Codeunit 396;
      DimManagement@1012 : Codeunit 408;
      UpdateDimQst@1008 : TextConst 'ENU=You may have changed a dimension.\\Do you want to update the lines?';
      MoreThanOneLineErr@1007 : TextConst '@@@=%1 Order No. %2 Item No. %3 Variant Code %4 Location Code %5 Bin Code;ENU=There are more than one order lines in Order %1 for Item No. %2, Variant Code %3, Location Code %4, Bin Code %5.';
      NoLineErr@1006 : TextConst '@@@=%1 Order No. %2 Item No. %3 Variant Code %4 Location Code %5 Bin Code;ENU=There are no order line in Order %1 for Item No. %2, Variant Code %3, Location Code %4, Bin Code %5.';

    [External]
    PROCEDURE InitRecord@1();
    BEGIN
      IF ("No. Series" <> '') AND
         (InvtSetup."Phys. Invt. Order Nos." = InvtSetup."Posted Phys. Invt. Order Nos.")
      THEN
        "Posting No. Series" := "No. Series"
      ELSE
        NoSeriesMgt.SetDefaultSeries("Posting No. Series",InvtSetup."Posted Phys. Invt. Order Nos.");

      IF "Posting Date" = 0D THEN
        VALIDATE("Posting Date",WORKDATE);
    END;

    [External]
    PROCEDURE AssistEdit@2(OldPhysInvtOrderHeader@1000 : Record 5875) : Boolean;
    BEGIN
      WITH PhysInvtOrderHeader DO BEGIN
        PhysInvtOrderHeader := Rec;
        InvtSetup.GET;
        TestNoSeries;
        IF NoSeriesMgt.SelectSeries(GetNoSeriesCode,OldPhysInvtOrderHeader."No. Series","No. Series") THEN BEGIN
          InvtSetup.GET;
          TestNoSeries;
          NoSeriesMgt.SetSeries("No.");
          Rec := PhysInvtOrderHeader;
          EXIT(TRUE);
        END;
      END;
    END;

    LOCAL PROCEDURE TestNoSeries@3();
    BEGIN
      InvtSetup.TESTFIELD("Phys. Invt. Order Nos.");
      InvtSetup.TESTFIELD("Posted Phys. Invt. Order Nos.");
    END;

    LOCAL PROCEDURE GetNoSeriesCode@4() : Code[10];
    BEGIN
      EXIT(InvtSetup."Phys. Invt. Order Nos.");
    END;

    LOCAL PROCEDURE GetPostingNoSeriesCode@10() : Code[10];
    BEGIN
      EXIT(InvtSetup."Posted Phys. Invt. Order Nos.");
    END;

    [External]
    PROCEDURE ValidateShortcutDimCode@5(FieldNo@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    VAR
      OldDimSetID@1002 : Integer;
    BEGIN
      OldDimSetID := "Dimension Set ID";
      DimManagement.ValidateShortcutDimValues(FieldNo,ShortcutDimCode,"Dimension Set ID");
      IF "No." <> '' THEN
        MODIFY;

      IF OldDimSetID <> "Dimension Set ID" THEN BEGIN
        MODIFY;
        IF PhysInvtOrderLinesExist THEN
          UpdateAllLineDim("Dimension Set ID",OldDimSetID);
      END;
    END;

    [External]
    PROCEDURE GetSamePhysInvtOrderLine@6(ItemNo@1000 : Code[20];VariantCode@1001 : Code[10];LocationCode@1002 : Code[10];BinCode@1003 : Code[20];VAR ErrorText@1004 : Text[250];VAR PhysInvtOrderLine2@1005 : Record 5876) : Integer;
    VAR
      NoOfOrderLines@1008 : Integer;
    BEGIN
      CLEAR(PhysInvtOrderLine2);

      PhysInvtOrderLine2.RESET;
      PhysInvtOrderLine2.SETCURRENTKEY(
        "Document No.","Item No.","Variant Code","Location Code","Bin Code");
      PhysInvtOrderLine2.SETRANGE("Document No.","No.");
      PhysInvtOrderLine2.SETRANGE("Item No.",ItemNo);
      PhysInvtOrderLine2.SETRANGE("Variant Code",VariantCode);
      PhysInvtOrderLine2.SETRANGE("Location Code",LocationCode);
      PhysInvtOrderLine2.SETRANGE("Bin Code",BinCode);
      OnGetSamePhysInvtOrderLineOnAfterSetFilters(PhysInvtOrderLine2,Rec);
      NoOfOrderLines := PhysInvtOrderLine2.COUNT;

      CASE NoOfOrderLines OF
        0:
          ErrorText := STRSUBSTNO(NoLineErr,"No.",ItemNo,VariantCode,LocationCode,BinCode);
        1:
          ErrorText := '';
        ELSE
          ErrorText := STRSUBSTNO(MoreThanOneLineErr,"No.",ItemNo,VariantCode,LocationCode,BinCode);
      END;

      IF NoOfOrderLines > 0 THEN
        PhysInvtOrderLine2.FIND('-');

      EXIT(NoOfOrderLines);
    END;

    [External]
    PROCEDURE ShowDocDim@7();
    VAR
      OldDimSetID@1000 : Integer;
    BEGIN
      OldDimSetID := "Dimension Set ID";
      "Dimension Set ID" :=
        DimManagement.EditDimensionSet2(
          "Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"No."),
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
      IF OldDimSetID <> "Dimension Set ID" THEN BEGIN
        MODIFY;
        IF PhysInvtOrderLinesExist THEN
          UpdateAllLineDim("Dimension Set ID",OldDimSetID);
      END;
    END;

    [External]
    PROCEDURE PhysInvtOrderLinesExist@8() : Boolean;
    BEGIN
      PhysInvtOrderLine.RESET;
      PhysInvtOrderLine.SETRANGE("Document No.","No.");
      EXIT(PhysInvtOrderLine.FINDFIRST);
    END;

    LOCAL PROCEDURE UpdateAllLineDim@9(NewParentDimSetID@1000 : Integer;OldParentDimSetID@1001 : Integer);
    VAR
      NewDimSetID@1002 : Integer;
    BEGIN
      IF NewParentDimSetID = OldParentDimSetID THEN
        EXIT;
      IF NOT CONFIRM(UpdateDimQst) THEN
        EXIT;

      PhysInvtOrderLine.RESET;
      PhysInvtOrderLine.SETRANGE("Document No.","No.");
      PhysInvtOrderLine.LOCKTABLE;
      IF PhysInvtOrderLine.FINDSET THEN
        REPEAT
          NewDimSetID := DimManagement.GetDeltaDimSetID(PhysInvtOrderLine."Dimension Set ID",NewParentDimSetID,OldParentDimSetID);
          IF PhysInvtOrderLine."Dimension Set ID" <> NewDimSetID THEN BEGIN
            PhysInvtOrderLine."Dimension Set ID" := NewDimSetID;
            DimManagement.UpdateGlobalDimFromDimSetID(
              PhysInvtOrderLine."Dimension Set ID",PhysInvtOrderLine."Shortcut Dimension 1 Code",
              PhysInvtOrderLine."Shortcut Dimension 2 Code");
            PhysInvtOrderLine.MODIFY;
          END;
        UNTIL PhysInvtOrderLine.NEXT = 0;
    END;

    [Integration]
    LOCAL PROCEDURE OnGetSamePhysInvtOrderLineOnAfterSetFilters@11(VAR PhysInvtOrderLine@1000 : Record 5876;PhysInvtOrderHeader@1001 : Record 5875);
    BEGIN
    END;

    BEGIN
    END.
  }
}

