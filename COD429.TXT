OBJECT Codeunit 429 IC Dimension Value-Indent
{
  OBJECT-PROPERTIES
  {
    Date=03/24/19;
    Time=12:00:00 PM;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    TableNo=412;
    OnRun=VAR
            ConfirmManagement@1000 : Codeunit 27;
          BEGIN
            IF NOT ConfirmManagement.ConfirmProcess(STRSUBSTNO(ICDimValueIndentQst,"Dimension Code"),TRUE) THEN
              EXIT;
            ICDimVal.SETRANGE("Dimension Code","Dimension Code");
            Indent;
          END;

  }
  CODE
  {
    VAR
      Text004@1004 : TextConst 'ENU=Indenting IC Dimension Values @1@@@@@@@@@@@@@@@@@@';
      ICDimVal@1006 : Record 412;
      Window@1007 : Dialog;
      i@1009 : Integer;
      Text005@1005 : TextConst 'ENU=End-Total %1 is missing a matching Begin-Total.';
      ICDimValueIndentQst@1008 : TextConst '@@@=%1 - field value;ENU=This function updates the indentation of all the IC dimension values for IC dimension %1. All IC dimension values between a Begin-Total and the matching End-Total are indented by one level. The Totaling field for each End-Total is also updated.\\Do you want to indent the IC dimension values?';

    LOCAL PROCEDURE Indent@1();
    VAR
      NoOfDimVals@1000 : Integer;
      Progress@1001 : Integer;
    BEGIN
      Window.OPEN(Text004);

      NoOfDimVals := ICDimVal.COUNT;
      IF NoOfDimVals = 0 THEN
        NoOfDimVals := 1;
      WITH ICDimVal DO
        IF FINDSET THEN
          REPEAT
            Progress := Progress + 1;
            Window.UPDATE(1,10000 * Progress DIV NoOfDimVals);
            IF "Dimension Value Type" = "Dimension Value Type"::"End-Total" THEN BEGIN
              IF i < 1 THEN
                ERROR(
                  Text005,
                  Code);
              i := i - 1;
            END;

            Indentation := i;
            MODIFY;

            IF "Dimension Value Type" = "Dimension Value Type"::"Begin-Total" THEN
              i += 1;
          UNTIL NEXT = 0;

      Window.CLOSE;
    END;

    BEGIN
    END.
  }
}

